apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tdmq.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "tdmq.name" . }}
    helm.sh/chart: {{ include "tdmq.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "tdmq.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "tdmq.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: flask-config
          configMap:
            name: {{ include "tdmq.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TDMQ_FLASK_CONFIG
              value: /etc/flask/config.py
            {{ if .Values.gunicorn.cmdArgs }}
            - name: GUNICORN_CMD_ARGS
              value: {{- .Values.gunicorn.cmdArgs -}}
            {{ end }}
            {{ if .Values.gunicorn.workers }}
            - name: GUNICORN_WORKERS
              value: {{ .Values.gunicorn.workers }}
            {{ end }}
            {{ if .Values.gunicorn.timeout }}
            - name: GUNICORN_TIMEOUT
              value: {{ .Values.gunicorn.timeout }}
            {{ end }}
            {{ if .Values.gunicorn.log-level }}
            - name: GUNICORN_LOG_LEVEL
              value: {{- .Values.gunicorn.log-level -}}
            {{ end }}
            - name: TDMQ_METRICS_PORT
              value: 9100
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: metrics
              containerPort: 9100
              protocol: TCP
          volumeMounts:
            - name: flask-config
              mountPath: /etc/flask
          livenessProbe:
            httpGet:
              path: /api/v0.0/entity_types
              port: http
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          startupProbe:
            httpGet:
              path: /api/v0.0/entity_types
              port: http
            failureThreshold: 10
            initialDelaySeconds: 2
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
