apiVersion: v1
data:
  config.py: |
    DB_HOST = {{ tpl (required "dbHost is required" .Values.conf.dbHost | quote) . }}
    DB_NAME = {{ tpl (required "dbName is required" .Values.conf.dbName | quote) . }}
    DB_USER = {{ tpl (required "dbUser is required" .Values.conf.dbUser | quote) . }}
    DB_PASSWORD = {{ tpl (required "dbPassword is required" .Values.conf.dbPassword | quote) . }}
    LOG_LEVEL = {{ .Values.conf.logLevel | quote }}
    TILEDB_VFS_ROOT = {{ tpl (required "Storage root is required" .Values.conf.storageRoot | quote) . }}
    TILEDB_VFS_CONFIG = {
        {{- if not (hasKey .Values.conf.tiledbVfsConfig "vfs.s3.endpoint_override") }}
          {{- fail "S3 endpoint is required" }}
        {{- end }}
        {{- range $k, $v := .Values.conf.tiledbVfsConfig }}
        {{ $k | quote }}: {{ $v | quote }},
        {{- end }}
    }
    TILEDB_VFS_CREDENTIALS = {
        "vfs.s3.aws_access_key_id": {{ tpl (required "AWS access key is required" .Values.conf.awsAccessKey | quote) . }},
        "vfs.s3.aws_secret_access_key": {{ tpl (required "AWS secret access key is required" .Values.conf.awsSecretAccessKey | quote) . }},
    }
    AUTH_TOKEN = {{ tpl (required "Admin token is required" .Values.conf.adminToken | quote) . }}
  gunicorn.conf.py: |
    # Gunicorn configuration
    {{- if .Values.conf.logLevel }}
    logLevel = {{ (lower .Values.conf.logLevel) | quote }}
    {{- end }}
{{ .Values.conf.gunicorn | indent 4 }}
kind: ConfigMap
metadata:
  name: {{ include "tdmq.fullname" . }}
